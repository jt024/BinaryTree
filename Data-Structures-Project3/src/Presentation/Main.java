/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import Data.BinaryTree;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jt024
 */
public class Main extends javax.swing.JFrame {
    private BinaryTree tree;
    private JFileChooser chooser;
    private String fileContent;
    private BufferedReader br;
    private final FileNameExtensionFilter FILTER = new FileNameExtensionFilter(
        "Text Files", "txt", "text");
    private StringBuilder sb;
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        taInput = new javax.swing.JTextArea();
        bnCount = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        taOutput = new javax.swing.JTextArea();
        bnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        taInput.setColumns(20);
        taInput.setLineWrap(true);
        taInput.setRows(5);
        taInput.setWrapStyleWord(true);
        jScrollPane1.setViewportView(taInput);

        bnCount.setText("Count");
        bnCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnCountActionPerformed(evt);
            }
        });

        jScrollPane2.setAutoscrolls(true);

        taOutput.setColumns(20);
        taOutput.setRows(5);
        jScrollPane2.setViewportView(taOutput);

        bnClear.setText("Clear");
        bnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bnCount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(365, 365, 365))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bnCount)
                    .addComponent(bnClear))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bnCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnCountActionPerformed
        tree = new BinaryTree();
        chooser = new JFileChooser();
        sb = new StringBuilder();
        chooser.setFileFilter(FILTER);
        

        if(chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try{
                FileReader reader = new FileReader(chooser.getSelectedFile());
                br = new BufferedReader(reader);
                String line = br.readLine();

                while (line != null) {
                    sb.append(line.replaceAll("[^a-zA-Z\\s]", "").replaceAll("\\s+", " ").toLowerCase());
                    sb.append(System.lineSeparator());
                    line = br.readLine();
                }
                fileContent = sb.toString();
                br.close();
                
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "File not found"
                    , "Error", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "IO Error"
                    , "Error", JOptionPane.ERROR_MESSAGE);
            
            }
        } else{
            return;
        }   
            
//        fileContent = removePunctuation(fileContent);
//        fileContent = fileContent.toLowerCase();
        taInput.setText(fileContent);
        for (String word : fileContent.split("\\s+"))
            {tree.addNode(word);}
        update();       
        

    }//GEN-LAST:event_bnCountActionPerformed

    private void bnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnClearActionPerformed
        tree = new BinaryTree();
        taOutput.setText("");
        taInput.setText("");
        
    }//GEN-LAST:event_bnClearActionPerformed

    private void update(){
        String temp = tree.inOrder(tree.getRoot());
        taOutput.setText("");
        taOutput.setText("WORD \t APPEARED\n");
        taOutput.append(temp);
        taOutput.append("\n\n");
        taOutput.append("Total unique words found: "+tree.getRoot().getTotalNodes());
    }
    
//    private String removePunctuation(String text){
//        return text.replaceAll("[^a-zA-Z\\s]", "").replaceAll("\\s+", " ");
//    }
    
    
    
//    public void openFile(){
////        chooser = new JFileChooser();
////        sb = new StringBuilder();
////        chooser.setFileFilter(FILTER);
//        
////        int returnVal = chooser.showOpenDialog(this);
//        
////        if(chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
////            try{
////                FileReader reader = new FileReader(chooser.getSelectedFile());
////                br = new BufferedReader(reader);
////                String line = br.readLine();
////                
////                while (line != null) {
////                    sb.append(line);
////                    sb.append(System.lineSeparator());
////                    line = br.readLine();
////                }
////                fileContent = sb.toString();
////                br.close();
////                
////            } catch (FileNotFoundException ex) {
////                JOptionPane.showMessageDialog(null, "File not found"
////                    , "Error", JOptionPane.ERROR_MESSAGE);
////            } catch (IOException ex) {
////                JOptionPane.showMessageDialog(null, "IO Error"
////                    , "Error", JOptionPane.ERROR_MESSAGE);
////            
////            }
////        }
//    }
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnClear;
    private javax.swing.JButton bnCount;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea taInput;
    private javax.swing.JTextArea taOutput;
    // End of variables declaration//GEN-END:variables
}
